{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "18f6ad3d",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-04-12T06:17:00.079138Z",
     "iopub.status.busy": "2025-04-12T06:17:00.078751Z",
     "iopub.status.idle": "2025-04-12T06:17:01.323005Z",
     "shell.execute_reply": "2025-04-12T06:17:01.321695Z"
    },
    "papermill": {
     "duration": 1.249882,
     "end_time": "2025-04-12T06:17:01.324817",
     "exception": false,
     "start_time": "2025-04-12T06:17:00.074935",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/datasethargaemasindikatormoneter/Dataset Harga Emas dan Indikator Moneter.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8d702f29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-12T06:17:01.331267Z",
     "iopub.status.busy": "2025-04-12T06:17:01.330748Z",
     "iopub.status.idle": "2025-04-12T06:17:03.536788Z",
     "shell.execute_reply": "2025-04-12T06:17:03.535461Z"
    },
    "papermill": {
     "duration": 2.211055,
     "end_time": "2025-04-12T06:17:03.538576",
     "exception": false,
     "start_time": "2025-04-12T06:17:01.327521",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Date   Price   Kurs  Inflasi  IndONIA Minyak\n",
      "0  1/3/2017  606000  13485     3.49  4.12408  52,33\n",
      "1  1/4/2017  606000  13478     3.49  4.12935  53,26\n",
      "2  1/5/2017  607000  13370     3.49  4.12697  53,76\n",
      "3  1/6/2017  606000  13347     3.49  4.13105  53,99\n",
      "4  1/9/2017  602000  13385     3.49  4.14132  51,96\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Load dataset\n",
    "df = pd.read_csv(\"/kaggle/input/datasethargaemasindikatormoneter/Dataset Harga Emas dan Indikator Moneter.csv\")\n",
    "\n",
    "# Tampilkan beberapa baris awal untuk melihat struktur data\n",
    "print(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0ac338a5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-12T06:17:03.544504Z",
     "iopub.status.busy": "2025-04-12T06:17:03.544152Z",
     "iopub.status.idle": "2025-04-12T06:17:03.583922Z",
     "shell.execute_reply": "2025-04-12T06:17:03.582442Z"
    },
    "papermill": {
     "duration": 0.044551,
     "end_time": "2025-04-12T06:17:03.585595",
     "exception": false,
     "start_time": "2025-04-12T06:17:03.541044",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 6 columns):\n",
      " #   Column   Non-Null Count  Dtype  \n",
      "---  ------   --------------  -----  \n",
      " 0   Date     1932 non-null   object \n",
      " 1   Price    1932 non-null   int64  \n",
      " 2   Kurs     1932 non-null   int64  \n",
      " 3   Inflasi  1932 non-null   float64\n",
      " 4   IndONIA  1932 non-null   float64\n",
      " 5   Minyak   1932 non-null   object \n",
      "dtypes: float64(2), int64(2), object(2)\n",
      "memory usage: 90.7+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b1f3ca13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-12T06:17:03.591748Z",
     "iopub.status.busy": "2025-04-12T06:17:03.591373Z",
     "iopub.status.idle": "2025-04-12T06:17:03.624544Z",
     "shell.execute_reply": "2025-04-12T06:17:03.623189Z"
    },
    "papermill": {
     "duration": 0.038286,
     "end_time": "2025-04-12T06:17:03.626401",
     "exception": false,
     "start_time": "2025-04-12T06:17:03.588115",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1932 entries, 0 to 1931\n",
      "Data columns (total 6 columns):\n",
      " #   Column   Non-Null Count  Dtype         \n",
      "---  ------   --------------  -----         \n",
      " 0   Date     1932 non-null   datetime64[ns]\n",
      " 1   Price    1932 non-null   float64       \n",
      " 2   Kurs     1932 non-null   float64       \n",
      " 3   Inflasi  1932 non-null   float64       \n",
      " 4   IndONIA  1932 non-null   float64       \n",
      " 5   Minyak   1932 non-null   float64       \n",
      "dtypes: datetime64[ns](1), float64(5)\n",
      "memory usage: 90.7 KB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "df['Date'] = pd.to_datetime(df['Date'])\n",
    "df.sort_values(by='Date', ascending=True, inplace=True)\n",
    "df.reset_index(drop=True, inplace=True)\n",
    "\n",
    "NumCols = df.columns.drop(['Date'])\n",
    "df[NumCols] = df[NumCols].replace({',': ''}, regex=True)\n",
    "df[NumCols] = df[NumCols].astype('float64')\n",
    "\n",
    "# Tampilkan info data untuk memastikan semuanya sudah benar\n",
    "print(df.info())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5cc938af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-12T06:17:03.632710Z",
     "iopub.status.busy": "2025-04-12T06:17:03.632343Z",
     "iopub.status.idle": "2025-04-12T06:17:04.073142Z",
     "shell.execute_reply": "2025-04-12T06:17:04.072103Z"
    },
    "papermill": {
     "duration": 0.446003,
     "end_time": "2025-04-12T06:17:04.074965",
     "exception": false,
     "start_time": "2025-04-12T06:17:03.628962",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Matriks Korelasi:\n",
      "            Price      Kurs   IndONIA   Inflasi    Minyak\n",
      "Price    1.000000  0.811890  0.235091 -0.284717  0.403832\n",
      "Kurs     0.811890  1.000000  0.433978 -0.040461  0.390750\n",
      "IndONIA  0.235091  0.433978  1.000000  0.158519 -0.037773\n",
      "Inflasi -0.284717 -0.040461  0.158519  1.000000  0.256047\n",
      "Minyak   0.403832  0.390750 -0.037773  0.256047  1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Ambil kolom yang diperlukan\n",
    "data = df[['Price', 'Kurs', 'IndONIA', 'Inflasi', 'Minyak']]\n",
    "\n",
    "# Hapus baris yang memiliki NaN (atau gunakan .fillna() jika ingin mengganti)\n",
    "data = data.dropna()\n",
    "\n",
    "# Hitung matriks korelasi dari kolom numerik\n",
    "corr_matrix = data.corr()\n",
    "\n",
    "# Cetak matriks korelasi\n",
    "print(\"Matriks Korelasi:\")\n",
    "print(corr_matrix)\n",
    "\n",
    "# Visualisasikan matriks korelasi menggunakan heatmap\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.heatmap(corr_matrix, annot=True, cmap='Reds', fmt=\".2f\")\n",
    "plt.title(\"Heatmap Korelasi Variabel\")\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 7000808,
     "sourceId": 11374062,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8.682311,
   "end_time": "2025-04-12T06:17:04.798592",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-12T06:16:56.116281",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
